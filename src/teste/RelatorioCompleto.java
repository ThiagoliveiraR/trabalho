/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package teste;

/**
 *
 * @author Maria Lucia
 */
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RelatorioCompleto extends javax.swing.JInternalFrame {

    /**
     * Creates new form RelatorioCompleto
     */
    public RelatorioCompleto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        ordenaMusica = new javax.swing.JRadioButton();
        ordenaArtista = new javax.swing.JRadioButton();
        ordenaAlbum = new javax.swing.JRadioButton();
        ordenaGenero = new javax.swing.JRadioButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Relatório Completo");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Música", "Artista", "Álbum", "Gênero", "Nota"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Ordenar por:");

        buttonGroup1.add(ordenaMusica);
        ordenaMusica.setText("Música");
        ordenaMusica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenaMusicaActionPerformed(evt);
            }
        });

        buttonGroup1.add(ordenaArtista);
        ordenaArtista.setText("Artista");
        ordenaArtista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenaArtistaActionPerformed(evt);
            }
        });

        buttonGroup1.add(ordenaAlbum);
        ordenaAlbum.setText("Álbum");
        ordenaAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenaAlbumActionPerformed(evt);
            }
        });

        buttonGroup1.add(ordenaGenero);
        ordenaGenero.setText("Gênero");
        ordenaGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordenaGeneroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(ordenaMusica)
                    .addComponent(ordenaArtista)
                    .addComponent(ordenaGenero)
                    .addComponent(ordenaAlbum))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(ordenaMusica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ordenaArtista)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ordenaAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ordenaGenero)
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenaMusicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenaMusicaActionPerformed
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by musica.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados!");
            }

    }//GEN-LAST:event_ordenaMusicaActionPerformed

    private void ordenaArtistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenaArtistaActionPerformed
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by artista.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados!");
            }
    }//GEN-LAST:event_ordenaArtistaActionPerformed

    private void ordenaAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenaAlbumActionPerformed
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by album.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados!");
            }
    }//GEN-LAST:event_ordenaAlbumActionPerformed

    private void ordenaGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ordenaGeneroActionPerformed
        try{
//            ConexaoEMetodos.conectar();
            Class.forName("com.mysql.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost/bibliotecamusical", "root","");
            String pesq="select DISTINCT musica.nome,artista.nome,album.nome,genero.nome,musica.nota from artista,genero,album,musica where genero.id=artista.genero_id && artista.id=album.artista_id && album.id=musica.album_id order by genero.nome;";
            PreparedStatement cmd;
            cmd = c.prepareStatement(pesq);
            ResultSet rs;
            rs=cmd.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setNumRows(0);
            while(rs.next()){
                model.addRow(new Object[]{
                    rs.getString("musica.nome"),
                    rs.getString("artista.nome"),
                    rs.getString("album.nome"),
                    rs.getString("genero.nome"),
                    rs.getString("musica.nota")
                });
            }
            } catch (ClassNotFoundException ex) { 
                JOptionPane.showMessageDialog(null,"Problema na configuração do Driver do MySQL!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,"Problema na conexão com o banco de dados!");
            }
    }//GEN-LAST:event_ordenaGeneroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton ordenaAlbum;
    private javax.swing.JRadioButton ordenaArtista;
    private javax.swing.JRadioButton ordenaGenero;
    private javax.swing.JRadioButton ordenaMusica;
    // End of variables declaration//GEN-END:variables
}
